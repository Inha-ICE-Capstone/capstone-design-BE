package com.inha.capstonedesign.voting.solidity;

import lombok.Getter;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.*;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.abi.datatypes.reflection.Parameterized;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.5.0.
 */
@SuppressWarnings("rawtypes")
public class Voting extends Contract {
    public static final String BINARY = "0x608060405234801561000f575f80fd5b506117688061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c8063618bde0a11610059578063618bde0a146100ea578063c66ed5771461011a578063dd61a65d14610136578063e4580088146101665761007b565b80631750a3d01461007f5780632f2c27391461009b5780634404d1ed146100b9575b5f80fd5b61009960048036038101906100949190610d78565b610182565b005b6100a36102b8565b6040516100b0919061107a565b60405180910390f35b6100d360048036038101906100ce919061109a565b6104b3565b6040516100e192919061111c565b60405180910390f35b61010460048036038101906100ff919061109a565b610567565b60405161011191906111cd565b60405180910390f35b610134600480360381019061012f91906111ed565b6106dd565b005b610150600480360381019061014b9190610d78565b610724565b60405161015d9190611243565b60405180910390f35b610180600480360381019061017b9190610d78565b61083a565b005b61018b82610972565b6101ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c1906112a6565b60405180910390fd5b5f8083815481106101de576101dd6112c4565b5b905f5260205f20906003020190506101f681836109d3565b15610236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022d9061133b565b60405180910390fd5b5f60405180604001604052808481526020015f60ff1681525090508160020181908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f01908161028f9190611553565b506020820151816001015f6101000a81548160ff021916908360ff160217905550505050505050565b60605f805480602002602001604051908101604052809291908181526020015f905b828210156104aa578382905f5260205f2090600302016040518060600160405290815f820154815260200160018201805461031490611386565b80601f016020809104026020016040519081016040528092919081815260200182805461034090611386565b801561038b5780601f106103625761010080835404028352916020019161038b565b820191905f5260205f20905b81548152906001019060200180831161036e57829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020015f905b82821015610493578382905f5260205f2090600202016040518060400160405290815f820180546103e890611386565b80601f016020809104026020016040519081016040528092919081815260200182805461041490611386565b801561045f5780601f106104365761010080835404028352916020019161045f565b820191905f5260205f20905b81548152906001019060200180831161044257829003601f168201915b50505050508152602001600182015f9054906101000a900460ff1660ff1660ff1681525050815260200190600101906103b8565b5050505081525050815260200190600101906102da565b50505050905090565b5f81815481106104c1575f80fd5b905f5260205f2090600302015f91509050805f0154908060010180546104e690611386565b80601f016020809104026020016040519081016040528092919081815260200182805461051290611386565b801561055d5780601f106105345761010080835404028352916020019161055d565b820191905f5260205f20905b81548152906001019060200180831161054057829003601f168201915b5050505050905082565b606061057282610972565b6105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a8906112a6565b60405180910390fd5b5f8083815481106105c5576105c46112c4565b5b905f5260205f209060030201905080600201805480602002602001604051908101604052809291908181526020015f905b828210156106d1578382905f5260205f2090600202016040518060400160405290815f8201805461062690611386565b80601f016020809104026020016040519081016040528092919081815260200182805461065290611386565b801561069d5780601f106106745761010080835404028352916020019161069d565b820191905f5260205f20905b81548152906001019060200180831161068057829003601f168201915b50505050508152602001600182015f9054906101000a900460ff1660ff1660ff1681525050815260200190600101906105f6565b50505050915050919050565b5f808054905090505f8060018160018154018082558091505003905f5260205f209060030201905081815f01819055508281600101908161071e9190611553565b50505050565b5f61072e83610972565b61076d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610764906112a6565b60405180910390fd5b5f808481548110610781576107806112c4565b5b905f5260205f20906003020190505f61079a8285610ac9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f59061166c565b60405180910390fd5b816002018181548110610814576108136112c4565b5b905f5260205f2090600202016001015f9054906101000a900460ff169250505092915050565b61084382610972565b610882576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610879906112a6565b60405180910390fd5b5f808381548110610896576108956112c4565b5b905f5260205f20906003020190505f6108af8284610ac9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103610913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090a9061166c565b60405180910390fd5b600182600201828154811061092b5761092a6112c4565b5b905f5260205f2090600202016001015f8282829054906101000a900460ff1661095491906116b7565b92506101000a81548160ff021916908360ff16021790555050505050565b5f805f90505b5f805490508110156109c957825f8281548110610998576109976112c4565b5b905f5260205f2090600302015f0154036109b65760019150506109ce565b80806109c1906116eb565b915050610978565b505f90505b919050565b5f805f90505b8360020180549050811015610abe57610a9c846002018281548110610a0157610a006112c4565b5b905f5260205f2090600202015f018054610a1a90611386565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4690611386565b8015610a915780601f10610a6857610100808354040283529160200191610a91565b820191905f5260205f20905b815481529060010190602001808311610a7457829003601f168201915b505050505084610bde565b15610aab576001915050610ac3565b8080610ab6906116eb565b9150506109d9565b505f90505b92915050565b5f805f90505b8360020180549050811015610bb357610b92846002018281548110610af757610af66112c4565b5b905f5260205f2090600202015f018054610b1090611386565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3c90611386565b8015610b875780601f10610b5e57610100808354040283529160200191610b87565b820191905f5260205f20905b815481529060010190602001808311610b6a57829003601f168201915b505050505084610bde565b15610ba05780915050610bd8565b8080610bab906116eb565b915050610acf565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b5f8180519060200120838051906020012014905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b610c1b81610c09565b8114610c25575f80fd5b50565b5f81359050610c3681610c12565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610c8a82610c44565b810181811067ffffffffffffffff82111715610ca957610ca8610c54565b5b80604052505050565b5f610cbb610bf8565b9050610cc78282610c81565b919050565b5f67ffffffffffffffff821115610ce657610ce5610c54565b5b610cef82610c44565b9050602081019050919050565b828183375f83830152505050565b5f610d1c610d1784610ccc565b610cb2565b905082815260208101848484011115610d3857610d37610c40565b5b610d43848285610cfc565b509392505050565b5f82601f830112610d5f57610d5e610c3c565b5b8135610d6f848260208601610d0a565b91505092915050565b5f8060408385031215610d8e57610d8d610c01565b5b5f610d9b85828601610c28565b925050602083013567ffffffffffffffff811115610dbc57610dbb610c05565b5b610dc885828601610d4b565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610e0481610c09565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610e41578082015181840152602081019050610e26565b5f8484015250505050565b5f610e5682610e0a565b610e608185610e14565b9350610e70818560208601610e24565b610e7981610c44565b840191505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f60ff82169050919050565b610ec281610ead565b82525050565b5f604083015f8301518482035f860152610ee28282610e4c565b9150506020830151610ef76020860182610eb9565b508091505092915050565b5f610f0d8383610ec8565b905092915050565b5f602082019050919050565b5f610f2b82610e84565b610f358185610e8e565b935083602082028501610f4785610e9e565b805f5b85811015610f825784840389528151610f638582610f02565b9450610f6e83610f15565b925060208a01995050600181019050610f4a565b50829750879550505050505092915050565b5f606083015f830151610fa95f860182610dfb565b5060208301518482036020860152610fc18282610e4c565b91505060408301518482036040860152610fdb8282610f21565b9150508091505092915050565b5f610ff38383610f94565b905092915050565b5f602082019050919050565b5f61101182610dd2565b61101b8185610ddc565b93508360208202850161102d85610dec565b805f5b8581101561106857848403895281516110498582610fe8565b945061105483610ffb565b925060208a01995050600181019050611030565b50829750879550505050505092915050565b5f6020820190508181035f8301526110928184611007565b905092915050565b5f602082840312156110af576110ae610c01565b5b5f6110bc84828501610c28565b91505092915050565b6110ce81610c09565b82525050565b5f82825260208201905092915050565b5f6110ee82610e0a565b6110f881856110d4565b9350611108818560208601610e24565b61111181610c44565b840191505092915050565b5f60408201905061112f5f8301856110c5565b818103602083015261114181846110e4565b90509392505050565b5f82825260208201905092915050565b5f61116482610e84565b61116e818561114a565b93508360208202850161118085610e9e565b805f5b858110156111bb578484038952815161119c8582610f02565b94506111a783610f15565b925060208a01995050600181019050611183565b50829750879550505050505092915050565b5f6020820190508181035f8301526111e5818461115a565b905092915050565b5f6020828403121561120257611201610c01565b5b5f82013567ffffffffffffffff81111561121f5761121e610c05565b5b61122b84828501610d4b565b91505092915050565b61123d81610ead565b82525050565b5f6020820190506112565f830184611234565b92915050565b7f42616c6c6f7420646f6573206e6f7420657869737400000000000000000000005f82015250565b5f6112906015836110d4565b915061129b8261125c565b602082019050919050565b5f6020820190508181035f8301526112bd81611284565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f43616e64696461746520616c72656164792065786973747300000000000000005f82015250565b5f6113256018836110d4565b9150611330826112f1565b602082019050919050565b5f6020820190508181035f83015261135281611319565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061139d57607f821691505b6020821081036113b0576113af611359565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026114127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826113d7565b61141c86836113d7565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61145761145261144d84610c09565b611434565b610c09565b9050919050565b5f819050919050565b6114708361143d565b61148461147c8261145e565b8484546113e3565b825550505050565b5f90565b61149861148c565b6114a3818484611467565b505050565b5b818110156114c6576114bb5f82611490565b6001810190506114a9565b5050565b601f82111561150b576114dc816113b6565b6114e5846113c8565b810160208510156114f4578190505b611508611500856113c8565b8301826114a8565b50505b505050565b5f82821c905092915050565b5f61152b5f1984600802611510565b1980831691505092915050565b5f611543838361151c565b9150826002028217905092915050565b61155c82610e0a565b67ffffffffffffffff81111561157557611574610c54565b5b61157f8254611386565b61158a8282856114ca565b5f60209050601f8311600181146115bb575f84156115a9578287015190505b6115b38582611538565b86555061161a565b601f1984166115c9866113b6565b5f5b828110156115f0578489015182556001820191506020850194506020810190506115cb565b8683101561160d5784890151611609601f89168261151c565b8355505b6001600288020188555050505b505050505050565b7f43616e64696461746520646f6573206e6f7420657869737400000000000000005f82015250565b5f6116566018836110d4565b915061166182611622565b602082019050919050565b5f6020820190508181035f8301526116838161164a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116c182610ead565b91506116cc83610ead565b9250828201905060ff8111156116e5576116e461168a565b5b92915050565b5f6116f582610c09565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117275761172661168a565b5b60018201905091905056fea2646970667358221220a7c30e71382b4d01050f68b58041c5036bb1c6f81c530bcb8d1fa2c2e59a0a5864736f6c63430008140033";

    public static final String FUNC_BALLOTLIST = "ballotList";

    public static final String FUNC_ADDBALLOT = "addBallot";

    public static final String FUNC_GETCANDIDATELIST = "getCandidateList";

    public static final String FUNC_ADDCANDIDATE = "addCandidate";

    public static final String FUNC_VOTEFORCANDIDATE = "voteForCandidate";

    public static final String FUNC_GETVOTECOUNT = "getVoteCount";

    public static final String FUNC_GETBALLOTLIST = "getBallotList";

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
    }

    @Deprecated
    protected Voting(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Voting(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Voting(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Voting(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<Tuple2<BigInteger, String>> ballotList(BigInteger param0) {
        final Function function = new Function(FUNC_BALLOTLIST,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
                }, new TypeReference<Utf8String>() {
                }));
        return new RemoteFunctionCall<Tuple2<BigInteger, String>>(function,
                new Callable<Tuple2<BigInteger, String>>() {
                    @Override
                    public Tuple2<BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<BigInteger, String>(
                                (BigInteger) results.get(0).getValue(),
                                (String) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> addBallot(String ballotName) {
        final Function function = new Function(
                FUNC_ADDBALLOT,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ballotName)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getCandidateList(BigInteger ballotId) {
        final Function function = new Function(FUNC_GETCANDIDATELIST,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(ballotId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Candidate>>() {
                }));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> addCandidate(BigInteger ballotId, String candidateName) {
        final Function function = new Function(
                FUNC_ADDCANDIDATE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(ballotId),
                        new org.web3j.abi.datatypes.Utf8String(candidateName)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> voteForCandidate(BigInteger ballotId, String candidate) {
        final Function function = new Function(
                FUNC_VOTEFORCANDIDATE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(ballotId),
                        new org.web3j.abi.datatypes.Utf8String(candidate)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> getVoteCount(BigInteger ballotId, String candidate) {
        final Function function = new Function(FUNC_GETVOTECOUNT,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(ballotId),
                        new org.web3j.abi.datatypes.Utf8String(candidate)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<List> getBallotList() {
        final Function function = new Function(FUNC_GETBALLOTLIST,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Ballot>>() {
                }));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    @Deprecated
    public static Voting load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Voting(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Voting load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Voting(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Voting load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Voting(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Voting load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Voting(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Voting> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Voting.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Voting> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Voting.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<Voting> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Voting.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Voting> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Voting.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    @Getter
    public static class Candidate extends DynamicStruct {
        public String name;

        public BigInteger voteCount;

        public Candidate(String name, BigInteger voteCount) {
            super(new org.web3j.abi.datatypes.Utf8String(name),
                    new org.web3j.abi.datatypes.generated.Uint8(voteCount));
            this.name = name;
            this.voteCount = voteCount;
        }

        public Candidate(Utf8String name, Uint8 voteCount) {
            super(name, voteCount);
            this.name = name.getValue();
            this.voteCount = voteCount.getValue();
        }
    }

    @Getter
    public static class Ballot extends DynamicStruct {
        public BigInteger ballotId;

        public String ballotName;

        public List<Candidate> candidateList;

        public Ballot(BigInteger ballotId, String ballotName, List<Candidate> candidateList) {
            super(new org.web3j.abi.datatypes.generated.Uint256(ballotId),
                    new org.web3j.abi.datatypes.Utf8String(ballotName),
                    new org.web3j.abi.datatypes.DynamicArray<Candidate>(Candidate.class, candidateList));
            this.ballotId = ballotId;
            this.ballotName = ballotName;
            this.candidateList = candidateList;
        }

        public Ballot(Uint256 ballotId, Utf8String ballotName, @Parameterized(type = Candidate.class) DynamicArray<Candidate> candidateList) {
            super(ballotId, ballotName, candidateList);
            this.ballotId = ballotId.getValue();
            this.ballotName = ballotName.getValue();
            this.candidateList = candidateList.getValue();
        }
    }
}
